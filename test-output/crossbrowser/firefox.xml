<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="TORNEDO" failures="0" tests="5" name="firefox" time="1.221" errors="0" timestamp="2023-03-02T10:30:39 IST">
  <testcase classname="projectTestCases.BaseClass" name="@BeforeMethod beforeMethod" time="1.106">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line 
Host info: host: &amp;apos;TORNEDO&amp;apos;, ip: &amp;apos;192.168.1.7&amp;apos;
Build info: version: &amp;apos;4.8.0&amp;apos;, revision: &amp;apos;267030adea&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'TORNEDO', ip: '192.168.1.7'
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:148)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:106)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:130)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:111)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:101)
at projectTestCases.BaseClass.beforeMethod(BaseClass.java:32)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@AfterMethod afterMethod" time="-1.677733239813E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@BeforeMethod beforeMethod" time="-1.677733239823E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@AfterMethod afterMethod" time="-1.677733239834E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@BeforeMethod beforeMethod" time="-1.677733239836E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@AfterMethod afterMethod" time="-1.677733239845E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@BeforeMethod beforeMethod" time="-1.677733239849E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@AfterMethod afterMethod" time="-1.677733239855E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@BeforeMethod beforeMethod" time="-1.677733239857E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="projectTestCases.BaseClass" name="@AfterMethod afterMethod" time="-1.677733239866E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="projectTestCases.LoginTestCases" name="verifyCSSValueofSignIn" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCSSValueofSignIn -->
  <testcase classname="projectTestCases.LoginTestCases" name="verifyDataFromExcel" time="0.0">
    <skipped/>
  </testcase> <!-- verifyDataFromExcel -->
  <testcase classname="projectTestCases.LoginTestCases" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="projectTestCases.LoginTestCases" name="verifySignInGetText" time="0.0">
    <skipped/>
  </testcase> <!-- verifySignInGetText -->
  <testcase classname="projectTestCases.LoginTestCases" name="verifyremberMeunSelected" time="0.0">
    <skipped/>
  </testcase> <!-- verifyremberMeunSelected -->
</testsuite> <!-- firefox -->
